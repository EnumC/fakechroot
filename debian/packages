# $Id: packages,v 1.11 2003/09/30 15:59:47 dexter Exp $

# Environment variables:
#   with_test=%{$with_test}  - build with check test

%define with_test %{?$with_test:1}%{!?$with_test:0}

%define fakeroot_version 0.7.8
%define automake_version 1.7

Source: fakechroot
Section: utils
Priority: optional
Maintainer: Piotr Roszatycki <dexter@debian.org>
Standards-Version: 3.6.1
Home-Page: <URL:http://fakechroot.alioth.debian.org/>
Description: Gives a fake chroot environment
Origin: debian
Copyright: GPL
 (c) 2003 Piotr Roszatycki <dexter@debian.org>, GPL
 .
 Based on fakeroot package:
 GNU copyleft joost witteveen, <joostje@debian.org>.
Build-Depends: automake%{automake_version}, autoconf, libtool
Build-Depends: sharutils, file, libc6-dev-s390x [s390], libc6-dev-sparc64 [sparc], gcc-3.3 [s390]
Build: sh
 aclocal-%{automake_version}
 autoheader
 libtoolize --copy
 automake-%{automake_version} --add-missing --copy
 autoconf
 ( cd fake 
    aclocal-%{automake_version}
    automake-%{automake_version} --add-missing --copy
    autoconf
 ) || false
 CC=${CC:-gcc}
 CFLAGS=${CFLAGS:--Wall -pedantic -g}
 CXXFLAGS=${CFLAGS:--Wall -pedantic -g}
 if [ "${DEB_BUILD_OPTIONS#*noopt}" != "$DEB_BUILD_OPTIONS" ]; then
     CFLAGS="$CFLAGS -O0"
     CXXFLAGS="$CXXFLAGS -O0"
 else
     CFLAGS="$CFLAGS -O2"
     CXXFLAGS="$CXXFLAGS -O2"
 fi
 install -d mkdir build-tree-lib build-tree-fake build-tree-lib64
 ( cd build-tree-lib && CC="$CC" CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" \
     ../configure --prefix=/usr --mandir=/usr/share/man --libdir=/usr/lib/libfakechroot ) || false
 ( cd build-tree-fake && CC="$CC" CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" \
     ../fake/configure --prefix=/usr --mandir=/usr/share/man ) || false
 ( cd build-tree-lib && make ) || false
 ( cd build-tree-fake && make ) || false
%if %{with_test}
 ( cd build-tree-lib && make check ) || false
%endif
 if [ "$DEB_HOST_GNU_TYPE" = "sparc-linux" ]; then
     ( cd build-tree-lib64 && CC="gcc -m64" CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" \
         ../configure --prefix=/usr --mandir=/usr/share/man --build=sparc-linux --host=sparc64-linux ) || false
     ( cd build-tree-lib64 && make libfakechroot.la ) || false
 fi
 if [ "$DEB_HOST_GNU_TYPE" = "s390-linux" ]; then
     ( cd build-tree-lib64 && CC="gcc-3.3 -m64" CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" \
         ../configure --prefix=/usr --mandir=/usr/share/man --build=s390-linux --host=s390x-linux ) || false
     ( cd build-tree-lib64 && make libfakechroot.la ) || false
 fi
Clean: sh
 rm -rf build-tree-*
 rm -rf $(cat .cvsignore)
 for i in $(find -name .cvsignore); do
     ( cd $(dirname $i) && rm -rf $(cat .cvsignore) )
 done

Package: fakechroot
Architecture: any
Depends: fakeroot (>= %{fakeroot_version}), []
Description: Gives a fake chroot environment
 This package provides a library which overrides libc functions, so
 it is possible to use root-specific tools without root priviliges.
 .
 In fake chroot you can install i.e. Debian boostrap, create developer's
 environment and build packages inside chroot'ed system using standard
 non-root user account.
Install: sh
 yada copy -into /usr/lib/libfakechroot build-tree-lib/.libs/*.so.*.*.* build-tree-lib/.libs/*.a
 chmod 644 $ROOT/usr/lib/libfakechroot/*.so.*.*.*
 for f in build-tree-lib/.libs/*.so.*.*.*; do
     f=$(basename $f)
     yada symlink -lib -subdir libfakechroot -as $(echo $f | sed 's/\.[0-9]*\.[0-9]*$//') $f
     yada symlink -lib -subdir libfakechroot -as $(echo $f | sed 's/\.[0-9]*\.[0-9]*\.[0-9]*$//') $f
 done
 yada copy -into /usr/lib build-tree-fake/.libs/*.so.*.*.*
 chmod 4644 $ROOT/usr/lib/*.so.*.*.*
 if [ "$DEB_HOST_GNU_TYPE" = "sparc-linux" -o "$DEB_HOST_GNU_TYPE" = "s390-linux" ]; then
     for f in build-tree-lib64/.libs/*.so.*.*.*; do
         f=$(basename $f)
         yada symlink -lib -into /usr/lib64/libfakechroot -as $(echo $f | sed 's/\.[0-9]*\.[0-9]*$//') $f
         yada symlink -lib -into /usr/lib64/libfakechroot -as $(echo $f | sed 's/\.[0-9]*\.[0-9]*\.[0-9]*$//') $f
     done
     chmod 4644 $ROOT/usr/lib/*.so.*.*.*
 fi
 for f in build-tree-fake/.libs/*.so.*.*.*; do
     f=$(basename $f)
     yada symlink -lib -as $(echo $f | sed 's/\.[0-9]*\.[0-9]*$//') $f
     yada symlink -lib -as $(echo $f | sed 's/\.[0-9]*\.[0-9]*\.[0-9]*$//') $f
 done
 yada install -script -as fakechroot scripts/fakeroot
 yada install -man -as fakechroot.1 doc/fakeroot.1
 yada install -doc README.fakechroot doc/debootstrap.diff 
 yada install -doc -subdir examples scripts/restoremode.sh scripts/savemode.sh scripts/ldd.fake
Shlibs:
 /usr/lib/libfakechroot/libfakechroot 0
